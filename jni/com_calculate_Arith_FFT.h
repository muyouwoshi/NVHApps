/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_calculate_Arith_FFT */

#ifndef _Included_com_calculate_Arith_FFT
#define _Included_com_calculate_Arith_FFT
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_calculate_Arith_FFT
 * Method:    init
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_init
  (JNIEnv *, jobject);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    finalizer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_calculate_Arith_1FFT_finalizer
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_Int_Calculate
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_com_calculate_Arith_1FFT_native_1Int_1Calculate
  (JNIEnv *, jobject, jint, jintArray, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_Float_Calculate
 * Signature: (I[FI)V
 */
JNIEXPORT void JNICALL Java_com_calculate_Arith_1FFT_native_1Float_1Calculate
  (JNIEnv *, jobject, jint, jfloatArray, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetResultInfo
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_native_1GetResultInfo
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetResult
 * Signature: (II[F)Z
 */
JNIEXPORT jfloatArray JNICALL Java_com_calculate_Arith_1FFT_native_1GetResult
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetMinMaxValue
 * Signature: (IFF)V
 */
JNIEXPORT void JNICALL Java_com_calculate_Arith_1FFT_native_1GetMinMaxValue
  (JNIEnv *, jobject, jint, jfloat, jfloat);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetPalette
 * Signature: (II)[I
 */
JNIEXPORT jintArray JNICALL Java_com_calculate_Arith_1FFT_native_1GetPalette
  (JNIEnv *, jobject, jint);
/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetMeanResult
 * Signature: (I)[F
 */
JNIEXPORT jfloatArray JNICALL Java_com_calculate_Arith_1FFT_native_1GetMeanResult
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_ResetMeanResult
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_calculate_Arith_1FFT_native_1ResetMeanResult
  (JNIEnv *, jobject, jint);
/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_ResetResult
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_calculate_Arith_1FFT_native_1ResetResult
  (JNIEnv *, jobject, jint);
/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_ResetSignal
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_calculate_Arith_1FFT_native_1ResetSignal
  (JNIEnv *, jobject, jint);
/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetWindowType
 * Signature: (II)V
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_native_1SetWindowType
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetWinShift
 * Signature: (II)V
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_native_1SetWinShift
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetWinLen
 * Signature: (II)V
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_native_1SetWinLen
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    setWeight
 * Signature: (ID[FII)[F
 */
JNIEXPORT jfloatArray JNICALL Java_com_calculate_Arith_1FFT_setWeight
  (JNIEnv *, jobject, jint, jdouble, jfloatArray, jint, jint);

/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_SetWinLen
 * Signature: (II)V
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_native_1GetWinLen
  (JNIEnv *, jobject, jint);
/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_SetWinShift
 * Signature: (II)V
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_native_1GetWinShift
  (JNIEnv *, jobject, jint);
/*
 * Class:     com_calculate_Arith_FFT
 * Method:    native_GetWindowType
 * Signature: (II)V
 */
JNIEXPORT jint JNICALL Java_com_calculate_Arith_1FFT_native_1GetWindowType
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
